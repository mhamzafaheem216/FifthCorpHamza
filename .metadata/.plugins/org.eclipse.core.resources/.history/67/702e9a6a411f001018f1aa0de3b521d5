package com.fifthcorp.Hamza.services;

import java.util.Arrays;
import java.util.List;

import org.json.JSONObject;
import org.springframework.stereotype.Service;

import com.fifthcorp.Hamza.entities.Unit;
import com.fifthcorp.Hamza.repository.UnitRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class UnitService {

    private final UnitRepository unitRepository;

    public List<Unit> getAllUnits() {
        return unitRepository.findAll();
    }

    public List<Unit> getUnitsByOwner(Long ownerId) {
        return unitRepository.findByOwnerId(ownerId);
    }

    public Unit createUnit(String obj) {
    	JSONObject jsonObj = new JSONObject(obj);
    	Unit unit = new Unit();
    	
    	unit.setType(jsonObj.has("unit_number") ? jsonObj.get("unit_number").toString() : null);
    	unit.setType(jsonObj.has("type") ? jsonObj.get("type").toString() : null);
    	unit.setType(jsonObj.has("location") ? jsonObj.get("location").toString() : null);
    	
    	if (jsonObj.has("value") && !jsonObj.isNull("value")) {
            try {
                unit.setValue(jsonObj.getDouble("value"));
            } catch (Exception e) {
                throw new RuntimeException("Field 'value' must be a valid number.");
            }
        }
    	
    	List<String> availableStatus = Arrays.asList("VACANT", "LEASED");
    	
    	if (jsonObj.has("status") && !jsonObj.isNull("status")) {
    	    String status = jsonObj.getString("status").toUpperCase();

    	    if (!availableStatus.contains(status)) {
    	        throw new BadRequestException("Invalid status. Allowed values: " + availableStatus);
    	    }

        return unitRepository.save(unit);
    }

    public Unit updateUnit(Long id, Unit unit) {
        unit.setId(id);
        return unitRepository.save(unit);
    }
}

